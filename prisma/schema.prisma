// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  email         String      @unique
  password      String
  name          String?
  avatar        String?
  role          String?
  bio           String?
  location      String?
  website       String?
  company       String?
  joinDate      DateTime    @default(now())
  twitterHandle String?
  githubHandle  String?
  linkedinHandle String?
  preferences   Preferences?
  security      Security?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Preferences {
  id                      String  @id @default(cuid())
  userId                  String  @unique
  user                    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  handGestureDetection    Boolean @default(true)
  facialEmotionRecognition Boolean @default(true)
  speechRecognition       Boolean @default(true)
  notifications           Boolean @default(true)
  darkMode               Boolean @default(false)
  highContrast           Boolean @default(false)
  reducedMotion          Boolean @default(false)
  language               String  @default("English")
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

model Security {
  id                String    @id @default(cuid())
  userId            String    @unique
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  twoFactorEnabled  Boolean   @default(false)
  lastPasswordChange DateTime @default(now())
  sessions          Session[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Session {
  id        String   @id @default(cuid())
  securityId String
  security  Security @relation(fields: [securityId], references: [id], onDelete: Cascade)
  device    String
  browser   String
  date      DateTime @default(now())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
